// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition as should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`composition hook should return with Stack props 1`] = `
Object {
  "className": "css-8b7xkk css-1pwrqjj css-1yuzjtp bb-Box bb-Stack",
}
`;

exports[`composition render props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`defaultProps should render correctly for className 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 test bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`defaultProps should render correctly for orientation 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:1024px) {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .emotion-4 > * {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .emotion-4 > *:not(:last-child) {
    margin-right: 2rem;
  }
}

@media screen and (max-width:1024px) {
  .emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
    margin-bottom: 2rem;
  }
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4 {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.child.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.child.horizontal should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:1024px) {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .emotion-4 > * {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .emotion-4 > *:not(:last-child) {
    margin-right: 2rem;
  }

  .emotion-4 > *:not(:last-child) {
    background-color: var(--bb-palette-red,#ff0000);
  }
}

@media screen and (max-width:1024px) {
  .emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
    margin-bottom: 2rem;
  }
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.child.vertical should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.horizontal should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:1024px) {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .emotion-4 > * {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .emotion-4 > *:not(:last-child) {
    margin-right: 2rem;
  }

  .emotion-4 {
    background-color: var(--bb-palette-red,#ff0000);
  }
}

@media screen and (max-width:1024px) {
  .emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
    margin-bottom: 2rem;
  }
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`overrides Stack.vertical should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4 {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for a horizontal set 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:1024px) {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .emotion-4 > * {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .emotion-4 > *:not(:last-child) {
    margin-right: 2rem;
  }
}

@media screen and (max-width:1024px) {
  .emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
    margin-bottom: 2rem;
  }
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for a horizontal set with breakpoint 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:1200px) {
  .emotion-4 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .emotion-4 > * {
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  .emotion-4 > *:not(:last-child) {
    margin-right: 2rem;
  }
}

@media screen and (max-width:1200px) {
  .emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
    margin-bottom: 2rem;
  }
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignX of center 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-6 {
  -webkit-align-x: center !important;
  -ms-flex-line-packalign-x: center !important;
  align-x: center !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignX of left 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-6 {
  -webkit-align-x: left !important;
  -ms-flex-line-packalign-x: left !important;
  align-x: left !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignX of right 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.emotion-6 {
  -webkit-align-x: right !important;
  -ms-flex-line-packalign-x: right !important;
  align-x: right !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignY of bottom 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-6 {
  -webkit-align-y: bottom !important;
  -ms-flex-line-packalign-y: bottom !important;
  align-y: bottom !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignY of center 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-6 {
  -webkit-align-y: center !important;
  -ms-flex-line-packalign-y: center !important;
  align-y: center !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly for an alignY of top 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-6 {
  -webkit-align-y: top !important;
  -ms-flex-line-packalign-y: top !important;
  align-y: top !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-6 {
  color: var(--bb-palette-primary,#000000) !important;
}

<div
  class="emotion-4 emotion-0 emotion-6 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4 {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.child.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.child.horizontal should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.child.vertical should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.horizontal should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;

exports[`theming Stack.styles.vertical should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4.emotion-4.emotion-4 > *:not(:last-child) {
  margin-bottom: 2rem;
}

.emotion-4 {
  background-color: var(--bb-palette-red,#ff0000);
}

<div
  class="emotion-4 emotion-0 emotion-1 bb-Box bb-Stack"
>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    hello
  </div>
  <div
    class="emotion-0 emotion-1 bb-Box"
  >
    world
  </div>
</div>
`;
